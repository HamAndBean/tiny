<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.itfinally.security.repository.mapper.RoleMapper">
    <resultMap id="roleEntity" type="top.itfinally.security.repository.po.RoleEntity"
               extends="top.itfinally.core.repository.mapper.BaseMapper.baseEntity">
        <result property="name" column="name" javaType="String"/>
        <result property="description" column="description" javaType="String"/>
    </resultMap>

    <cache-ref namespace="top.itfinally.core.repository.mapper.BaseMapper"/>

    <select id="query" resultMap="roleEntity">
        select * from security_role where id = #{id}
    </select>

    <select id="queryAll" resultMap="roleEntity">
        select * from security_role where 1 = 1
        <if test="status != -1001">
            and status = #{status}
        </if>
        <if test="beginRow != -1000 and row != -1000">
            limit #{beginRow}, #{row}
        </if>
    </select>

    <select id="queryBySpecificId" resultMap="roleEntity">
        select * from security_role where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        <if test="status != -1001">
            and status = #{status}
        </if>
        <if test="beginRow != -1000 and row != -1000">
            limit #{beginRow}, #{row}
        </if>
    </select>

    <insert id="save">
        INSERT INTO security_role (
            id, create_time, update_time, delete_time, status, name, description

        ) VALUES (
            #{id}, #{createTime}, #{updateTime}, #{deleteTime}, #{status}, #{name}, #{description}
        );
    </insert>

    <insert id="saveAll">
        INSERT INTO security_role (
        id, create_time, update_time, delete_time, status, name, description

        ) VALUES
        <foreach collection="entities" item="entity" open="(" separator="), (" close=")">
            #{entity.id},
            #{entity.createTime},
            #{entity.updateTime},
            #{entity.deleteTime},
            #{entity.status},
            #{entity.name},
            #{entity.description}
        </foreach>
    </insert>

    <update id="update">
        UPDATE security_role
        SET
            update_time = #{updateTime},
            delete_time = #{deleteTime},
            status      = #{status},
            name        = #{name},
            description = #{description}
        WHERE id = #{id}
    </update>

    <update id="specificUpdate">
        update security_role set update_time = #{updateTime}
        <foreach collection="fieldAndValues.entrySet()" index="key" item="value" open="," separator=",">
            ${key} = #{value}
        </foreach>
        where id = #{id}
    </update>

    <update id="remove">
        UPDATE security_role
        SET
        update_time = #{deleteTime},
        delete_time = #{deleteTime},
        status      = -1
        WHERE id = #{id}
    </update>

    <update id="removeAll">
        update security_role set
        update_time = #{deleteTime},
        delete_time = #{deleteTime},
        status = -1
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <delete id="physicalDelete">
        DELETE FROM security_role
        WHERE id = #{id}
    </delete>

    <delete id="physicalDeleteAll">
        delete from security_role where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="queryUserRoleByAuthorityId" resultMap="roleEntity">
        SELECT *
        FROM security_role
        WHERE id IN (
            SELECT role_id
            FROM security_user_role
            WHERE authority_id = #{authorityId} and status = 1
        )
    </select>

    <select id="queryByName" resultMap="roleEntity">
        SELECT *
        FROM security_role
        WHERE name = #{name}
    </select>
</mapper>