<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.itfinally.security.repository.mapper.UserRoleMapper">
    <resultMap id="userRoleEntity" type="UserRoleEntity"
               extends="top.itfinally.core.repository.mapper.BaseMapper.baseEntity">
        <association property="userAuthority" column="authority_id"
                     select="top.itfinally.security.repository.mapper.UserAuthorityMapper.query"/>
        <association property="role" column="role_id"
                     select="top.itfinally.security.repository.mapper.RoleMapper.query"/>
    </resultMap>

    <cache-ref namespace="top.itfinally.core.repository.mapper.BaseMapper"/>

    <select id="query" resultMap="userRoleEntity">
        select * from security_user_role where id = #{id}
    </select>

    <select id="queryAll" resultMap="userRoleEntity">
        select * from security_user_role where 1 = 1
        <if test="status != -1001">
            and status = #{status}
        </if>
        <if test="beginRow != -1000 and row != -1000">
            limit #{beginRow}, #{row}
        </if>
    </select>

    <select id="queryBySpecificId" resultMap="userRoleEntity">
        select * from security_user_role where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        <if test="status != -1001">
            and status = #{status}
        </if>
        <if test="beginRow != -1000 and row != -1000">
            limit #{beginRow}, #{row}
        </if>
    </select>

    <insert id="save">
        INSERT INTO security_user_role (
            id, create_time, update_time, delete_time, status, authority_id, role_id

        ) VALUES (
            #{id}, #{createTime}, #{updateTime}, #{deleteTime}, #{status}, #{userAuthority.id}, #{role.id}
        );
    </insert>

    <insert id="saveAll">
        INSERT INTO security_user_role (
        id, create_time, update_time, delete_time, status, authority_id, role_id

        ) VALUES
        <foreach collection="entities" item="entity" open="(" separator="), (" close=")">
            #{entity.id},
            #{entity.createTime},
            #{entity.updateTime},
            #{entity.deleteTime},
            #{entity.status},
            #{entity.userAuthority.id},
            #{entity.role.id}
        </foreach>
    </insert>

    <update id="update">
        UPDATE security_user_role
        SET
            update_time  = #{updateTime},
            delete_time  = #{deleteTime},
            status       = #{status},
            authority_id = #{userAuthority.id},
            role_id      = #{role.id}
        WHERE id = #{id}
    </update>

    <update id="specificUpdate">
        update security_user_role set update_time = #{updateTime}
        <foreach collection="fieldAndValues.entrySet()" index="key" item="value" open="," separator=",">
            ${key} = #{value}
        </foreach>
        where id = #{id}
    </update>

    <update id="remove">
        UPDATE security_user_role
        SET
        update_time = #{deleteTime},
        delete_time = #{deleteTime},
        status      = -1
        WHERE id = #{id}
    </update>

    <update id="removeAll">
        update security_user_role set
        update_time = #{deleteTime},
        delete_time = #{deleteTime},
        status = -1
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <delete id="physicalDelete">
        DELETE FROM security_user_role
        WHERE id = #{id}
    </delete>

    <delete id="physicalDeleteAll">
        delete from security_user_role where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="queryByAuthorityId" resultMap="userRoleEntity">
        SELECT *
        FROM security_user_role
        WHERE authority_id = #{authorityId}
    </select>

    <select id="hasUserAuthority" resultType="boolean">
        SELECT 1
        FROM security_user_role
        WHERE authority_id = #{authorityId}
        <if test="status != -1001">
            and status = #{status}
        </if>
        LIMIT 1
    </select>

    <select id="hasAllUserAuthority" resultType="boolean">
        SELECT 1
        FROM security_user_role
        WHERE authority_id IN
        <foreach collection="authorityIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        <if test="status != -1001">
            and status = #{status}
        </if>
        limit 1
    </select>

    <select id="hasRole" resultType="boolean">
        SELECT 1
        FROM security_user_role
        WHERE role_id = #{roleId}
        <if test="status != -1001">
            and status = #{status}
        </if>
        LIMIT 1
    </select>

    <select id="hasAllRole" resultType="boolean">
        SELECT 1
        FROM security_user_role
        WHERE role_id IN
        <foreach collection="roleIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        <if test="status != -1001">
            and status = #{status}
        </if>
        limit 1
    </select>
</mapper>