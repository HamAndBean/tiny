<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.itfinally.security.repository.mapper.UserAuthorityMapper">
    <resultMap id="userAuthorityEntity" type="top.itfinally.security.repository.po.UserAuthorityEntity"
               extends="top.itfinally.core.repository.mapper.BaseMapper.baseEntity">
        <result property="isNonExpired" column="is_non_expired" javaType="boolean"/>
        <result property="isNonLocked" column="is_non_locked" javaType="boolean"/>
        <result property="isCredentialsNonExpired" column="is_credentials_non_expired" javaType="boolean"/>
        <result property="isEnable" column="is_enable" javaType="boolean"/>
    </resultMap>

    <cache-ref namespace="top.itfinally.core.repository.mapper.BaseMapper"/>

    <select id="query" resultMap="userAuthorityEntity">
        select * from v1_security_user_details where id = #{id}
    </select>

    <select id="queryAll" resultMap="userAuthorityEntity">
        select * from v1_security_user_details where 1 = 1
        <if test="status != -1001">
            and status = #{status}
        </if>
        <if test="beginRow != -1000 and row != -1000">
            limit #{beginRow}, #{row}
        </if>
    </select>

    <select id="queryBySpecificId" resultMap="userAuthorityEntity">
        select * from v1_security_user_details where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        <if test="status != -1001">
            and status = #{status}
        </if>
        <if test="beginRow != -1000 and row != -1000">
            limit #{beginRow}, #{row}
        </if>
    </select>

    <insert id="save">
        INSERT INTO v1_security_user_details (
            id, create_time, update_time, delete_time, status,
            is_non_expired, is_non_locked, is_credentials_non_expired, is_enable

        ) VALUES (
            #{id}, #{createTime}, #{updateTime}, #{deleteTime}, #{status},
            #{isNonExpired}, #{isNonLocked}, #{isCredentialsNonExpired}, #{isEnable}
        );
    </insert>

    <insert id="saveAll">
        INSERT INTO v1_security_user_details (
        id, create_time, update_time, delete_time, status,
        is_non_expired, is_non_locked, is_credentials_non_expired, is_enable

        ) VALUES
        <foreach collection="entities" item="entity" open="(" separator="), (" close=")">
            #{entity.id},
            #{entity.createTime},
            #{entity.updateTime},
            #{entity.deleteTime},
            #{entity.status},
            #{entity.isNonExpired},
            #{entity.isNonLocked},
            #{entity.isCredentialsNonExpired},
            #{entity.isEnable}
        </foreach>
    </insert>

    <update id="update">
        UPDATE v1_security_user_details
        SET
            update_time                = #{updateTime},
            delete_time                = #{deleteTime},
            status                     = #{status},
            is_non_expired             = #{isNonExpired},
            is_non_locked              = #{isNonLocked},
            is_credentials_non_expired = #{isCredentialsNonExpired},
            is_enable                  = #{isEnable}
        WHERE id = #{id}
    </update>

    <update id="specificUpdate">
        update v1_security_user_details set update_time = #{updateTime}
        <foreach collection="fieldAndValues.entrySet()" index="key" item="value" open="," separator=",">
            ${key} = #{value}
        </foreach>
        where id = #{id}
    </update>

    <update id="remove">
        UPDATE v1_security_user_details
        SET
            update_time = #{deleteTime},
            delete_time = #{deleteTime},
            status      = -1
        WHERE id = #{id}
    </update>

    <update id="removeAll">
        update v1_security_user_details set
        update_time = #{deleteTime},
        delete_time = #{deleteTime},
        status = -1
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <delete id="physicalDelete">
        DELETE FROM v1_security_user_details
        WHERE id = #{id}
    </delete>

    <delete id="physicalDeleteAll">
        delete from v1_security_user_details where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>