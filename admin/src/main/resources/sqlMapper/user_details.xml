<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.itfinally.admin.repository.mapper.UserDetailsMapper">
    <resultMap id="userDetail" type="top.itfinally.admin.repository.po.UserDetailsEntity"
               extends="top.itfinally.core.repository.mapper.BaseMapper.baseEntity">
        <result property="account" column="account" javaType="String"/>
        <result property="password" column="password" javaType="String"/>
        <result property="nickname" column="nickname" javaType="String"/>
        <result property="authorityId" column="authority_id" javaType="String"/>
    </resultMap>

    <cache-ref namespace="top.itfinally.core.repository.mapper.BaseMapper"/>

    <select id="query" resultMap="userDetail">
        SELECT *
        FROM v1_user_details
        WHERE id = #{id}
    </select>

    <select id="queryAll" resultMap="userDetail">
        select * from v1_user_details where 1 = 1
        <if test="status != -1001">
            and status = #{status}
        </if>
        <if test="beginRow != -1000 and row != -1000">
            limit #{beginRow}, #{row}
        </if>
    </select>

    <select id="queryBySpecificId" resultMap="userDetail">
        select * from v1_user_details where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        <if test="status != -1001">
            and status = #{status}
        </if>
        <if test="beginRow != -1000 and row != -1000">
            limit #{beginRow}, #{row}
        </if>
    </select>

    <insert id="save">
        INSERT INTO v1_user_details (
            id, create_time, update_time, delete_time, status,
            account, password, nickname, authority_id

        ) VALUES (
            #{id}, #{createTime}, #{updateTime}, #{deleteTime}, #{status},
            #{account}, #{password}, #{nickname}, #{authorityId}
        );
    </insert>

    <insert id="saveAll">
        INSERT INTO v1_user_details (
        id, create_time, update_time, delete_time, status,
        account, password, nickname, authority_id

        ) VALUES
        <foreach collection="entities" item="entity" open="(" separator="), (" close=")">
            #{entity.id},
            #{entity.createTime},
            #{entity.updateTime},
            #{entity.deleteTime},
            #{entity.status},
            #{entity.account},
            #{entity.password},
            #{entity.nickname},
            #{entity.authorityId}
        </foreach>
    </insert>

    <update id="update">
        UPDATE v1_user_details
        SET
            update_time  = #{updateTime},
            delete_time  = #{deleteTime},
            status       = #{status},
            account      = #{account},
            password     = #{password},
            nickname     = #{nickname},
            authority_id = #{authorityId}
        WHERE id = #{id}
    </update>

    <update id="specificUpdate">
        update v1_user_details set update_time = #{updateTime}
        <foreach collection="fieldAndValues.entrySet()" index="key" item="value" open="," separator=",">
            ${key} = #{value}
        </foreach>
        where id = #{id}
    </update>

    <update id="remove">
        UPDATE v1_user_details
        SET
            update_time = #{deleteTime},
            delete_time = #{deleteTime},
            status      = -1
        WHERE id = #{id}
    </update>

    <update id="removeAll">
        update v1_user_details set
        update_time = #{deleteTime},
        delete_time = #{deleteTime},
        status = -1
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <delete id="physicalDelete">
        DELETE FROM v1_user_details
        WHERE id = #{id}
    </delete>

    <delete id="physicalDeleteAll">
        delete from v1_user_details where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="queryByAccount" resultMap="userDetail">
        SELECT *
        FROM v1_user_details
        WHERE account = #{account}
    </select>

    <select id="queryByMultiCondition" resultMap="userDetail">
        select * from v1_user_details
        <where>
            <if test="condition.createStartTime != -1002 and condition.createEndingTime != -1002">
                and #{condition.createStartTime} &lt;= create_time and create_time &lt; #{condition.createEndingTime}
            </if>
            <if test="condition.updateStartTime != -1002 and condition.updateEndingTime != -1002">
                and #{condition.updateStartTime} &lt;= create_time and create_time &lt; #{condition.updateEndingTime}
            </if>
            <if test="condition.status != -1001">
                and status = #{condition.status}
            </if>
            <if test="condition.nickname != null">
                and nickname = #{condition.nickname}
            </if>
            <if test="condition.id != null">
                and id = #{condition.id}
            </if>
        </where>
        <if test="beginRow != -1000 and row != -1000">
            limit #{beginRow}, #{row}
        </if>
    </select>

    <select id="countByMultiCondition" resultType="int">
        select count(id) from v1_user_details
        <where>
            <if test="condition.createStartTime != -1002 and condition.createEndingTime != -1002">
                and #{condition.createStartTime} &lt;= create_time and create_time &lt; #{condition.createEndingTime}
            </if>
            <if test="condition.updateStartTime != -1002 and condition.updateEndingTime != -1002">
                and #{condition.updateStartTime} &lt;= create_time and create_time &lt; #{condition.updateEndingTime}
            </if>
            <if test="condition.status != -1001">
                and status = #{condition.status}
            </if>
            <if test="condition.nickname != null">
                and nickname = #{condition.nickname}
            </if>
            <if test="condition.id != null">
                and id = #{condition.id}
            </if>
        </where>
    </select>

    <update id="updateUserStatus">
        UPDATE v1_user_details
        SET status = #{status}, update_time = #{updateTime}, delete_time = #{deleteTime}
        where id in
        <foreach collection="userIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>