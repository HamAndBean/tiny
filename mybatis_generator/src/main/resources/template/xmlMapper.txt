<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${table.thisEntity.mapperName}">
    <resultMap id="${util.lowerFirstChar( ${table.thisEntity.simpleName} )}" type="${table.thisEntity.name}"
               extends="${table.extendEntity.mapperName}.${util.lowerFirstChar( ${table.extendEntity.simpleName} )}">
        #foreach( $item in ${table.columnInfoList} )
        #if ( "association" == ${item.joinType} )
        <association property="${item.property}" column="${item.column}"
                     select="${item.joinMapperName}.query"/>
        #elseif ( "collection" == ${item.joinType} )
        <collection property="${item.property}" column="${item.column}"
                    select="${item.joinMapperName}.query"/>
        #else
        <result property="${item.property}" column="${item.column}" javaType="${item.javaType}"/>
        #end
        #end
    </resultMap>

    <cache-ref namespace="${table.extendEntity.mapperName}"/>

    <select id="query" resultMap="${util.lowerFirstChar( ${table.thisEntity.simpleName} )}">
        select * from ${table.tableName} where id = #{id}
    </select>

    <select id="queryAll" resultMap="${util.lowerFirstChar( ${table.thisEntity.simpleName} )}">
            select * from ${table.tableName} where 1 = 1
            <if test="status != -1001">
                and status = #{status}
            </if>
            <if test="beginRow != -1000 and row != -1000">
                limit #{beginRow}, #{row}
            </if>
        </select>

        <select id="queryBySpecificId" resultMap="${util.lowerFirstChar( ${table.thisEntity.simpleName} )}">
            select * from ${table.tableName} where id in
            <foreach collection="ids" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
            <if test="status != -1001">
                and status = #{status}
            </if>
            <if test="beginRow != -1000 and row != -1000">
                limit #{beginRow}, #{row}
            </if>
        </select>

        <insert id="save">
            INSERT INTO ${table.tableName} (
                ${util.generateInsertSqlField( ${allColumns} )}

            ) VALUES (
                ${util.generateInsertSqlVal( ${allColumns} )}
            );
        </insert>

        <insert id="saveAll">
            INSERT INTO ${table.tableName} (
                ${util.generateInsertSqlField( ${allColumns} )}

            ) VALUES
            <foreach collection="entities" item="entity" open="(" separator="), (" close=")">
                ${util.generateInsertSqlVal( ${allColumns}, "entity." )}
            </foreach>
        </insert>

        <update id="update">
            UPDATE ${table.tableName}
            SET
                ${util.generateUpdateSql( ${allColumns} )}
            WHERE id = #{id}
        </update>

        <update id="specificUpdate">
            update ${table.tableName} set update_time = #{updateTime}
            <foreach collection="fieldAndValues.entrySet()" index="key" item="value" open="," separator=",">
                ${key} = #{value}
            </foreach>
            where id = #{id}
        </update>

        <update id="remove">
            UPDATE ${table.tableName}
            SET
                update_time = #{deleteTime},
                delete_time = #{deleteTime},
                status      = -1
            WHERE id = #{id}
        </update>

        <update id="removeAll">
            update ${table.tableName} set
            update_time = #{deleteTime},
            delete_time = #{deleteTime},
            status = -1
            where id in
            <foreach collection="ids" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </update>

        <delete id="physicalDelete">
            DELETE FROM ${table.tableName}
            WHERE id = #{id}
        </delete>

        <delete id="physicalDeleteAll">
            delete from ${table.tableName} where id in
            <foreach collection="ids" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        </delete>
</mapper>